"""
Django settings for lms project.

Generated by 'django-admin startproject' using Django 4.2.16.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
from datetime import timedelta
import os
from pathlib import Path
from google.oauth2 import service_account



# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-!8kysv=)%6^)qd376y%u2l018ops29#c4vd^a#rb3&x-cq$ke8'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['34.72.102.7', '*']


# Application definition

INSTALLED_APPS = [
    'channels',
    'daphne',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'student',
    'expert',
    'chat',
    'storages',
    'corsheaders',
]

MESSAGE_STORAGE = 'django.contrib.messages.storage.session.SessionStorage'


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]


ROOT_URLCONF = 'lms.urls'

TEMPLATES_DIR = os.path.join(BASE_DIR, 'templates')

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATES_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'student.context_processors.context_processor',
                'expert.context_processors.context_processor',
            ],
        },
    },
]

#WSGI_APPLICATION = 'lms.wsgi.application'
ASGI_APPLICATION = 'lms.asgi.application'


CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels.layers.InMemoryChannelLayer',
    },
}


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}
#nitin
#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.postgresql_psycopg2',
#        'NAME': 'lsmdb',
#        'USER': 'nitin0550',
#        'PASSWORD': 'nitin0550@9696',
#        'HOST': 'localhost',
#        'PORT': '',
#    }
#}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTHENTICATION_BACKENDS = [
    'lms.backends.InactiveUserAuthBackend',
    'django.contrib.auth.backends.ModelBackend',
]
# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

LOGIN_REDIRECT_URL = 'login'  # Change to the desired redirect page
LOGOUT_REDIRECT_URL = 'login'
LOGIN_URL = 'login'

CORS_ALLOW_ALL_ORIGINS = True  # For development; restrict in production
CORS_ALLOW_METHODS = ['GET', 'OPTIONS', 'HEAD']
CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'range',
]
# Update GCS settings
GS_QUERYSTRING_AUTH = True
GS_CUSTOM_ENDPOINT = None
GS_EXPIRATION = timedelta(seconds=3600)

DEFAULT_FILE_STORAGE = 'storages.backends.gcloud.GoogleCloudStorage'
GS_BUCKET_NAME = 'lms-testing'
GS_PROJECT_NAME = 'lms-project-445105'
GS_CORS_ORIGINS = ['*']
GS_DEFAULT_ACL = None
GS_FILE_OVERWRITE = False
GS_QUERYSTRING_AUTH = True
GS_CREDENTIALS = service_account.Credentials.from_service_account_file(
    os.path.join(BASE_DIR, 'lms-project-445105-1c15f933ede4.json'),
    scopes=['https://www.googleapis.com/auth/devstorage.read_write']
)
os.environ['GOOGLE_APPLICATION_CREDENTIALS'] = os.path.join(BASE_DIR, 'lms-project-445105-1c15f933ede4.json')

#MEDIA_URL = '/media/'
MEDIA_URL = f'https://storage.googleapis.com/{GS_BUCKET_NAME}/'
MEDIA_ROOT = 'media'
#MEDIA_ROOT = os.path.join(BASE_DIR, 'media').replace('\\', '/')
DATA_UPLOAD_MAX_MEMORY_SIZE = 104857600  # 100MB

# Video upload settings
VIDEO_SETTINGS = {
    'ALLOWED_TYPES': ['video/mp4', 'video/webm', 'video/quicktime'],
    'MAX_SIZE': 104857600,  # 100MB
    'UPLOAD_PATH': 'expert',  # Base path for user directories
}

# Create media directories
MEDIA_PATHS = [
    MEDIA_ROOT,
    os.path.join(MEDIA_ROOT, VIDEO_SETTINGS['UPLOAD_PATH']),
]

for path in MEDIA_PATHS:
    os.makedirs(path, exist_ok=True)

# Use existing path handling from models.py
FILE_UPLOAD_HANDLERS = [
    'django.core.files.uploadhandler.MemoryFileUploadHandler',
    'django.core.files.uploadhandler.TemporaryFileUploadHandler',
]
# Content Security Policy
SECURE_CONTENT_TYPE_NOSNIFF = False
X_FRAME_OPTIONS = 'SAMEORIGIN'
# Add MIME types for HLS
import mimetypes
mimetypes.add_type('application/x-mpegURL', '.m3u8')
mimetypes.add_type('video/MP2T', '.ts')

DATA_UPLOAD_MAX_MEMORY_SIZE = VIDEO_SETTINGS['MAX_SIZE']

STATIC_URL = '/static/'

#STATICFILES_DIRS = [
#    BASE_DIR / 'static',  # Point to the static folder outside the app
#]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]
# Collect static files in a single location during production
STATIC_ROOT = BASE_DIR / 'staticfiles'  # Directory for collectstatic in production

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

TIME_ZONE =  'Asia/Kolkata'
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = 'nitinmaurya0550@gmail.com'
EMAIL_HOST_PASSWORD = 'ycrh jkse jggw labz'
EMAIL_USE_TLS = True